<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<mapper namespace="com.kh.goty.item.model.dao.ItemMapper">
	
	<resultMap id="itemResultSet" type="item">

		<result column="IMG_NO" 		property="imgNo" />
		<result column="IMG_NAME"		property="imgName" />
		<result column="IMG_PATH" 		property="imgPath" />
		<result column="ITEM_NO" 		property="itemNo" />
		<result column="ITEM_CATEGORY" 	property="itemCategory" />
		<result column="PRICE" 			property="price" />
		<result column="ITEM_NAME" 		property="itemName" />
		<result column="RATING" 		property="rating" />
		<result column="DEVELOPER" 		property="developer" />
		<result column="PUBLISHER" 		property="publisher" />
		<result column="GENRE" 			property="genre" />
		<result column="PLATFORM_NO"    property="platformNo" />
		<result column="PLATFORM_NAME"	property="platformName" />
		
	</resultMap>
	
	<resultMap id="orderResultSet" type="order">
		
		<result column="ORDER_NO" 		property="orderNo" />
		<result column="MEMBER_NO" 		property="memberNo" />
		<result column="MEMBER_NAME" 	property="memberName" />
		<result column="ITEM_NO" 		property="itemNo" />
		<result column="ITEM_NAME" 		property="itemName" />
		<result column="PLATFORM_NAME"	property="platformName" />
		<result column="IMG_NAME"		property="imgName" />
		<result column="IMG_PATH" 		property="imgPath" />
		<result column="PRICE" 			property="price" />
		<result column="TO_NAME" 		property="toName" />
		<result column="TO_CONTACT" 	property="toContact" />
		<result column="T0_EMAIL" 		property="toEmail" />
		<result column="ADDRESS" 		property="address" />
		<result column="DETAIL_ADDRESS" property="detailAddress" />
		<result column="MESSAGE" 		property="message" />
	
	</resultMap>
	
	<resultMap id="purchaseResultSet" type="purchase">

		<result column="PURCHASE_NO" 	property="purchaseNo" />
		<result column="USE_POINT" 		property="usePoint" />
		<result column="ADD_POINT" 		property="addPoint" />
		<result column="TOTAL_PRICE" 	property="totalPrice" />
		<result column="MEMBER_NO" 		property="memberNo" />
		<result column="MEMBER_NAME" 	property="memberName" />
		<result column="PURCHASE_DATE" 	property="purchaseDate" />
		<result column="STATUS" 		property="status" />
	
	</resultMap>
	
	<sql id="commonSql">
	
		SELECT 
		        I.ITEM_NO,
		        IMG_NAME,
        		IMG_PATH,
		        ITEM_NAME,
		        PRICE,
		        P.PLATFORM_NO,
		        PLATFORM_NAME,
		        DEVELOPER,
		        PUBLISHER,
		        RATING,
		        GENRE
		  FROM
		        ITEM I
		  JOIN
		       	ITEM_IMG II
		    ON (I.IMG_NO = II.IMG_NO)
		  JOIN
		        GAME_CATEGORY_BRIDGE G
		    ON (I.ITEM_NO = G.ITEM_NO)
		  JOIN
		        PLATFORM_CATEGORY P
		    ON (G.PLATFORM_NO = P.PLATFORM_NO)
		 WHERE
		        STATUS = 'Y'
		   
	</sql>
	
	<sql id="countList">
	
		SELECT
				COUNT(*)
		  FROM
		  		ITEM I
		  JOIN
			    GAME_CATEGORY_BRIDGE G
			ON (I.ITEM_NO = G.ITEM_NO)
		  JOIN
			    PLATFORM_CATEGORY P
			ON (G.PLATFORM_NO = P.PLATFORM_NO)
		 WHERE
		 		STATUS = 'Y'
		 		
	</sql>
	
	<!-- List Count용 SQL문 -->
	<select id="findMachineCount" parameterType="string" resultType="_int">
	
		<include refid="countList" />
		   AND
				ITEM_CATEGORY = 1
		   AND
		   		P.PLATFORM_NAME = #{platform}
		
	</select>
	
	<select id="findGameCount" parameterType="string" resultType="_int">
	
		<include refid="countList" />
		   AND
				ITEM_CATEGORY = 2
		   AND
		   		P.PLATFORM_NAME = #{platform}
		
	</select>
	
	<select id="findAccessoryCount" parameterType="string" resultType="_int">
	
		<include refid="countList" />
		   AND
				ITEM_CATEGORY = 3
		   AND
		   		P.PLATFORM_NAME = #{platform}
		
	</select>
	<!-- 여기까지  -->
	
	<!-- Item List용 SQL문-->
	<select id="findMachineList" parameterType="string" resultMap="itemResultSet">
	
		<include refid="commonSql" />
		  AND
		       	ITEM_CATEGORY = 1
		  AND
		       	P.PLATFORM_NAME = #{platform}
		ORDER
		   BY
				ITEM_NO
	
	</select>
	
	<select id="findGameList" parameterType="string" resultMap="itemResultSet">
	
		<include refid="commonSql" />
		  AND
		       	ITEM_CATEGORY = 2
		  AND
		       	P.PLATFORM_NAME = #{platform}
		ORDER
		   BY
				ITEM_NO
	
	</select>
	
	<select id="findAccessoryList" parameterType="string" resultMap="itemResultSet">
		
		<include refid="commonSql" />
		  AND
		       	ITEM_CATEGORY = 3
		  AND
		       	P.PLATFORM_NAME = #{platform}
		ORDER
		   BY
				ITEM_NO
	
	</select>
	<!-- 여기까지 -->
	
	<!-- Item Detail용 SQL문 -->
	<select id="findItemDetail" parameterType="hashmap" resultMap="itemResultSet">
		
		<include refid="commonSql" />
		   AND
		        I.ITEM_NO = #{itemNo}
		   AND
		   		P.PLATFORM_NO = #{platformNo}
	</select>
	
	<!-- Basket Insert용 SQL문 -->
	<insert id="addItemInCart" parameterType="hashmap">
	
		INSERT
		  INTO
		  		CART
		VALUES
				(
				#{itemNo},
				#{memberNo},
				#{platformNo},
				SYSDATE
				)
				
	</insert>
	
	<!-- Cart 목록 Delete용 SQL문 -->
	<delete id="deleteItemInCart" parameterType="hashmap">
		
		DELETE 
		
		  FROM
		  		CART
		 WHERE
		 		ITEM_NO = #{itemNo}
		   AND
		   		MEMBER_NO = #{memberNo}
		   AND
		   		PLATFORM_NO = #{platformNo}
		
	</delete>
	
	<!-- Cart 목록 조회 -->
	<select id="findItemListInCart" parameterType="_int" resultMap="itemResultSet">
		
		SELECT 
		        C.ITEM_NO,
		        PLATFORM_NO,
		        ITEM_NAME,
		        PRICE,
		        ITEM_CATEGORY,
		        DEVELOPER,
		        PUBLISHER,
		        RATING,
		        GENRE,
		        IMG_NAME,
		        IMG_PATH
		  FROM 
		        CART C
		  JOIN
		        ITEM I
		    ON  (C.ITEM_NO = I.ITEM_NO)
		  JOIN
		        ITEM_IMG II
		    ON  (I.IMG_NO = II.IMG_NO)
		 WHERE
		        STATUS = 'Y'
		   AND
		        MEMBER_NO = #{memberNo}
		
	</select>
	
	<select id="findCartList" parameterType="hashmap" resultType="_int">
		
		SELECT
				COUNT(*)
		  FROM
		  		CART
		 WHERE
		 		ITEM_NO = #{itemNo}
		   AND
		   		PLATFORM_NO = #{platformNo}
		
	</select>
	
	<insert id="addOrder" parameterType="order">
	
		INSERT
		  INTO
		        TB_ORDER
		VALUES
		        (
		        SEQ_TB_ORDER.NEXTVAL,
		        #{memberNo},
		        #{itemNo},
		        #{toName},
		        #{toContact},
		        #{toEmail},
		        #{address},
		        #{detailAddress},
		        #{message},
		        DEFAULT
		        )
		        
	</insert>
	
	<select id="findOrderList" parameterType="_int" resultMap="orderResultSet" >
	
		SELECT
				ORDER_NO,
		        MEMBER_NAME,
		        ITEM_NAME,
		        PLATFORM_NAME,
		        PRICE,
		        IMG_NAME,
		        IMG_PATH,
		        TO_NAME,
		        TO_CONTACT,
		        TO_EMAIL,
		        O.ADDRESS,
		        DETAIL_ADDRESS,
		        MESSAGE
		  FROM
		        TB_ORDER O
		  JOIN
		        MEMBER M
		    ON (O.MEMBER_NO = M.MEMBER_NO)
		  JOIN
		        ITEM I
		    ON (O.ITEM_NO = I.ITEM_NO)
		  JOIN
		        ITEM_IMG II
		    ON  (I.IMG_NO = II.IMG_NO)
		  JOIN
		        GAME_CATEGORY_BRIDGE G
		    ON (I.ITEM_NO = G.ITEM_NO)
		  JOIN
		        PLATFORM_CATEGORY P
		    ON (G.PLATFORM_NO = P.PLATFORM_NO)
		 WHERE
		        O.MEMBER_NO = #{memberNo}
		   AND
		   		O.STATUS = 'N'
		 ORDER
		 	BY
		 		ORDER_NO DESC
	
	</select>
	
	<insert id="addPurchase" parameterType="purchase">
	 	
	 	INSERT
		  INTO
		        PURCHASE
		VALUES
		        (
		        SEQ_PURCHASE.NEXTVAL,
		        #{memberNo},
		       	#{totalPrice},
		        #{usePoint},
		        #{addPoint},
		        SYSDATE,
		        DEFAULT
		        )
	 
	</insert>

	<insert id="addOrderPurchaseBridge" parameterType="hashmap">
	
		INSERT ALL
			<foreach collection="list" item="item">
				INTO 	ORDER_PURCHASE_BRIDGE	
				VALUES
				(
				#{item.orderNo},
				#{item.purchaseNo}
				)
			</foreach>
		SELECT * FROM DUAL
	</insert>
	
	<select id="findPurchase" parameterType="_int" resultMap="purchaseResultSet">
	
		SELECT
				PURCHASE_NO,
				MEMBER_NO,
				TOTAL_PRICE,
				USE_POINT,
				ADD_POINT,
				PURCHASE_DATE
		  FROM
		  		PURCHASE
		 WHERE
		 		MEMBER_NO = #{memberNo}
		   AND
		   		STATUS = 'N'
		 		
	</select>
	
	<update id="updateOrder" parameterType="list"> 
	
		UPDATE
				TB_ORDER
		   SET
		 		STATUS = 'Y'
		 WHERE
		 		ORDER_NO
		 	IN
	 		<foreach collection="list" item="orderNo" open="(" close=")" separator=",">
	 			#{orderNo}
	 		</foreach>
	
	</update>
	
	<update id="updatePurchase" parameterType="_int">
	
		UPDATE
				PURCHASE
		   SET
		 		STATUS = 'Y'
		 WHERE
		 		PURCHASE_NO = #{purchaseNo}
		   AND
		   		STATUS = 'N'
	</update>
	
	<select id="findPurchaseDetail" parameterType="_int" resultMap="purchaseResultSet">
	
		SELECT
		        PURCHASE_NO,
		        MEMBER_NAME,
		        P.TOTAL_PRICE,
		        PURCHASE_DATE
		  FROM
		        PURCHASE P
		  JOIN
		        MEMBER M
		    ON  (P.MEMBER_NO = M.MEMBER_NO)
		 WHERE
		        PURCHASE_NO = #{purchaseNo}
	
	</select>
	
	
</mapper>